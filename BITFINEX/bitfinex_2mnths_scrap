#pip install bitfinex-tencars
import bitfinex
# Create api instance of the v2 API
api_v2 = bitfinex.bitfinex_v2.api_v2()
result = api_v2.candles()

import datetime
import time
# Define query parameters
pair = 'btcusd' # Currency pair of interest
bin_size = '1m' # This will return minute data
limit = 1000    # We want the maximum of 1000 data points 
# Define the start date
t_start = datetime.datetime(2019, 4, 1, 0, 0)
t_start = time.mktime(t_start.timetuple()) * 1000
# Define the end date
t_stop = datetime.datetime(2019, 6, 14, 0, 0)
t_stop = time.mktime(t_stop.timetuple()) * 1000
result = api_v2.candles(symbol=pair, interval=bin_size,  
                        limit=limit, start=t_start, end=t_stop)

def fetch_data(start, stop, symbol, interval, tick_limit, step):
     # Create api instance
    api_v2 = bitfinex.bitfinex_v2.api_v2()
    data = []
    start = start - step
    while start < stop:
        start = start + step
        end = start + step
        res = api_v2.candles(symbol=symbol, interval=interval, limit=tick_limit, start=start,end=end)
        data.extend(res)
        time.sleep(2)
        return data
    
# Set step size
time_step = 60000000
            
pair_data = fetch_data(start=t_start, stop=t_stop, symbol=pair,
                       interval=bin_size, tick_limit=limit, 
                       step=time_step)



import pandas as pd

# Create pandas data frame and clean/format data
names = ['time', 'open', 'close', 'high', 'low', 'volume']
df = pd.DataFrame(pair_data, columns=names)
df.drop_duplicates(inplace=True)
df['time'] = pd.to_datetime(df['time'], unit='ms')
df.set_index('time', inplace=True)
df.sort_index(inplace=True)


print('Done downloading data. Saving to .csv.')
df.to_csv('{}/bitfinex_{}.csv'.format(r"C:\Users\admin\Desktop\python scrapping", pair))
print('Done saving data. Moving to next pair.')

print('Done retrieving data')
